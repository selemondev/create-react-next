<% if (stateManagement === 'zustand' ) { -%>
    import { create } from 'zustand'

    const useStore = create((set) => ({
    count: 0,
    incrementCount: () => set((state) => ({ count: state.count + 1 })),
    decrementCount: () => set((state) => ({ count: state.count - 1 })),
    resetCount: () => set({ count: 0 }),
    }))
    <% } -%>
<% if (stateManagement === 'redux' ) { -%>
    import { configureStore } from '@reduxjs/toolkit'
    import counterReducer from "../features/counter/counterSlice"
    // ...
    
    export const store = configureStore({
      reducer: {
        counter: counterReducer,
      },
    })
    
    // Infer the `RootState` and `AppDispatch` types from the store itself
    export type RootState = ReturnType<typeof store.getState>
    // Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}
    export type AppDispatch = typeof store.dispatch
 <% } -%>
